
        
   
from flask import Flask, request
from twilio.twiml.messaging_response import MessagingResponse
from pymongo import MongoClient
from datetime import datetime

from urllib.parse import quote_plus
username = "Shlomo"
password = "321212"  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
username = quote_plus(username)
password = quote_plus(password)

# –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
uri = f"mongodb+srv://{username}:{password}@cluster0.pg0xs.mongodb.net/"
cluster = MongoClient(uri)

db=cluster["bakery"]
orders=db["orders"]
users=db["users"]
app=Flask(__name__) 

@app.route("/", methods=["get","post"])
def reply():
      app.logger.info("–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: %s", request.form)
      text=request.form.get("Body")
      number=request.form.get("From")
      number=number.replace("whatsapp:","")
      response=MessagingResponse()
      user=users.find_one({"number":number})
      if bool(user)==False:
            response.message("Hi, thanks for contacting *The Red Velvet*.\nYou can choose from one of the options below: "
                    "\n\n*Type*\n\n 1Ô∏è‚É£ To *contact* us \n 2Ô∏è‚É£ To *order* snacks \n 3Ô∏è‚É£ To know our *working hours* \n 4Ô∏è‚É£ "
                    "To get our *address*")
            users.insert_one({"number":number,"status":"main","messages":[]})
      elif user["status"]=="main":
            try:
             option=int(text)
             if option==1:
                 response.message( "You can contact us through phone or e-mail.\n\n*Phone*: 991234 56789 \n*E-mail* : contact@theredvelvet.io")
             elif option==2:
                 response.message( "You entered the order mode")
                 users.update_one({"number": number}, {"$set": {"status": "ordering"}})
                 response.message("You can select one of the following cakes to order: \n\n1Ô∏è‚É£ Red Velvet  \n2Ô∏è‚É£ Dark Forest \n3Ô∏è‚É£ Ice Cream Cake"
                "\n4Ô∏è‚É£ Plum Cake \n5Ô∏è‚É£ Sponge Cake \n6Ô∏è‚É£ Genoise Cake \n7Ô∏è‚É£ Angel Cake \n8Ô∏è‚É£ Carrot Cake \n9Ô∏è‚É£ Fruit Cake  \n0Ô∏è‚É£ Go Back")
             elif option==3:
                 response.message("We work from *9 a.m. to 5 p.m*.")
             elif option==4:
                  response.message(
                "We have multiple stores across the city. Our main center is at *4/54, New Delhi*")
             else: 
                 response.message("Please enter a valid response")
            except ValueError:
             response.message("Please enter a valid response")
      elif user["status"] == "ordering":
        try:
            option = int(text)
        except:
            response.message("Please enter a valid response")
            return str( response)
        if option == 0:
            users.update_one(
                {"number": number}, {"$set": {"status": "main"}})
            response.message("You can choose from one of the options below: "
                        "\n\n*Type*\n\n 1Ô∏è‚É£ To *contact* us \n 2Ô∏è‚É£ To *order* snacks \n 3Ô∏è‚É£ To know our *working hours* \n 4Ô∏è‚É£ "
                        "To get our *address*")
        elif 1 <= option <= 9:
            cakes = ["Red Velvet Cake", "Dark Forest Cake", "Ice Cream Cake",
                     "Plum Cake", "Sponge Cake", "Genoise Cake", "Angel Cake", "Carrot Cake", "Fruit Cake"]
            selected = cakes[option - 1]
            users.update_one(
                {"number": number}, {"$set": {"status": "address"}})
            users.update_one(
                {"number": number}, {"$set": {"item": selected}})
            response.message("Excellent choice üòâ")
            response.message("Please enter your address to confirm the order")
        else:
             response.message("Please enter a valid response")
      elif user["status"] == "address":
       user_data = users.find_one({"number": number})  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
       selected = user_data.get("item")  # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
       response.message("Thanks for shopping with us üòä")
       response.message(f"Your order for *{selected}* has been received and will be delivered within an hour")
       orders.insert_one({"number": number, "item": selected, "address": text, "order_time": datetime.now()})
       users.update_one({"number": number}, {"$set": {"status": "ordered"}})

      elif user["status"] == "ordered":
        response.message("Hi, thanks for contacting again.\nYou can choose from one of the options below: "
                    "\n\n*Type*\n\n 1Ô∏è‚É£ To *contact* us \n 2Ô∏è‚É£ To *order* snacks \n 3Ô∏è‚É£ To know our *working hours* \n 4Ô∏è‚É£ "
                    "To get our *address*")
        users.update_one(
            {"number": number}, {"$set": {"status": "main"}})
      users.update_one({"number": number}, {"$push": {"messages": {"text": text, "date": datetime.now()}}})
      return str( response)

        
   
if __name__=="__main__":#–∑–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ
      app.run(port=5000)
